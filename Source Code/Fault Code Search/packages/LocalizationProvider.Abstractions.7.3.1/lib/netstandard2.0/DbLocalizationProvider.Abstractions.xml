<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DbLocalizationProvider.Abstractions</name>
    </assembly>
    <members>
        <member name="T:DbLocalizationProvider.Abstractions.AvailableLanguage">
            <summary>
            Model to represent available language (most for AdminUI)
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.AvailableLanguage.#ctor(System.String,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            What do you think will do? Obviously create new instance of the class.
            </summary>
            <param name="displayName">Display name of the language (might be different from Name or EnglishName of the CultureInfo set for the available language).</param>
            <param name="sortIndex">If we need sorting, this is the index to use.</param>
            <param name="cultureInfo">Actual culture info for the language.</param>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.AvailableLanguage.DisplayName">
            <summary>
            Display name of the language (might be different from Name or EnglishName of the CultureInfo set for the available language).
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.AvailableLanguage.SortIndex">
            <summary>
            If we need sorting, this is the index to use.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.AvailableLanguage.CultureInfo">
            <summary>
            Actual culture info for the language.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.AvailableLanguage.Invariant">
            <summary>
            When you are in the Antarctic
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.DiscoveredResource">
            <summary>
            Class is used to describe resource found during scanning process. It clearly is having way more properties as LocalizedResource (metadata luggage you know?!).
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.DiscoveredTranslation">
            <summary>
            Class describing discovered translation.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.DiscoveredTranslation.#ctor(System.String,System.String)">
            <summary>
            Creates new instance
            </summary>
            <param name="translation">Found translation.</param>
            <param name="culture">Translation language.</param>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.DiscoveredTranslation.Translation">
            <summary>
            Found translation.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.DiscoveredTranslation.Culture">
            <summary>
            Translation language.
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.HiddenAttribute">
            <summary>
            Use this attribute to hide resource in AdminUI
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.ICommand">
            <summary>
            Interface to implement for commands
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.ICommandHandler`1">
            <summary>
            Handler of the <see cref="T:DbLocalizationProvider.Abstractions.ICommand" />
            </summary>
            <typeparam name="TCommand"></typeparam>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.ICommandHandler`1.Execute(`0)">
            <summary>
            Handles the command. Actual instance of the command being executed is passed-in as argument
            </summary>
            <param name="command">Actual command instance being executed</param>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.IgnoreAttribute">
            <summary>
            Use this attribute to tell synchronize not to register decorated property as resource.
            Useful in cases when you need to decorate class that has a lot of discoverable resources, but only few of them need
            to be registered.
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.IncludeAttribute">
            <summary>
            Opposite meaning compared to <see cref="T:DbLocalizationProvider.Abstractions.IgnoreAttribute" />. Wanna know more - read doc of the attribute.
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.IQuery`1">
            <summary>
            Interface for queries. Localization provider internally is built using something similar to CQS pattern.
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.IQueryHandler`2">
            <summary>
            And this is handler of the <see cref="T:DbLocalizationProvider.Abstractions.IQuery`1" />
            </summary>
            <typeparam name="TQuery">Instance of the query which is being executed</typeparam>
            <typeparam name="TResult">Return type of the query. Might be collection of something also.</typeparam>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.IQueryHandler`2.Execute(`0)">
            <summary>
            Place where query handling happens
            </summary>
            <param name="query">This is the query instance</param>
            <returns>
            You have to return something from the query execution. Of course you can return <c>null</c> as well if you
            will.
            </returns>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.IResourceRepository">
            <summary>
            Repository interface to be implemented by some storage provider.
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.LocalizationResource">
            <summary>
            Represents localizable resource
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DbLocalizationProvider.Abstractions.LocalizationResource" /> class.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResource.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DbLocalizationProvider.Abstractions.LocalizationResource" /> class.
            </summary>
            <param name="key">The resource key.</param>
            <param name="enableInvariantCultureFallback">Should we use invariant fallback or not.</param>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResource.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResource.ResourceKey">
            <summary>
            Gets or sets the resource key.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResource.ModificationDate">
            <summary>
            Gets or sets the modification date.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResource.Author">
            <summary>
            Gets or sets the author.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResource.FromCode">
            <summary>
            Gets or sets a value indicating whether resource is synced from code.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResource.IsModified">
            <summary>
            Gets or sets whether resource is modified from AdminUI.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResource.IsHidden">
            <summary>
            Gets or sets the is hidden.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResource.Notes">
            <summary>
            Gets or sets the notes for the resource.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResource.Translations">
            <summary>
            Gets or sets list of translations for the resource.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResource.CreateNonExisting(System.String)">
            <summary>
            Creates new instance of resource that does not exist. This is required in cases when we need to cache non-existing resources.
            </summary>
            <param name="key">The key.</param>
            <returns>Resource instance</returns>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.LocalizationResourceTranslation">
            <summary>
            Represents translation of the resource if given language.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResourceTranslation.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResourceTranslation.ResourceId">
            <summary>
            Gets or sets the resource identifier to which translation belongs to.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResourceTranslation.LocalizationResource">
            <summary>
            Gets or sets the localization resource.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResourceTranslation.Language">
            <summary>
            Gets or sets the language for the translation.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResourceTranslation.Value">
            <summary>
            Gets or sets actual translation value.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizationResourceTranslation.ModificationDate">
            <summary>
            Gets or sets the modification date.
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection">
            <summary>
            Collection of translations.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.#ctor(System.Boolean)">
            <summary>
            Initializes new instance of the class with specified fallback to invariant language setting.
            </summary>
            <param name="enableInvariantCultureFallback">Should we use invariant fallback or not.</param>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.FindByLanguage(System.Globalization.CultureInfo)">
            <summary>
            Finds translation the by language.
            </summary>
            <param name="language">The language.</param>
            <returns>Translation class</returns>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.FindByLanguage(System.String)">
            <summary>
            Finds translation by language.
            </summary>
            <param name="language">The language.</param>
            <returns>Translation class</returns>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.InvariantTranslation">
            <summary>
            Find translation in invariant culture.
            </summary>
            <returns>Translation class</returns>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.ByLanguage(System.Globalization.CultureInfo)">
            <summary>
            Finds translation by language.
            </summary>
            <param name="language">The language.</param>
            <returns>Translation class</returns>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.ByLanguage(System.String)">
            <summary>
            Finds translation by language.
            </summary>
            <param name="language">The language.</param>
            <returns>Translation class</returns>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.ByLanguage(System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Finds translation by language.
            </summary>
            <param name="language">The language.</param>
            <param name="invariantCultureFallback">if set to <c>true</c> invariant culture fallback is used.</param>
            <returns>Translation class</returns>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.ByLanguage(System.String,System.Boolean)">
            <summary>
            Finds translation by language.
            </summary>
            <param name="language">The language.</param>
            <param name="invariantCultureFallback">if set to <c>true</c> [invariant culture fallback].</param>
            <returns>Translation class</returns>
            <exception cref="T:System.ArgumentNullException">language</exception>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.ExistsLanguage(System.String)">
            <summary>
            Checks whether translation exists in given language.
            </summary>
            <param name="language">The language.</param>
            <returns><c>true</c> is translation exists; otherwise <c>false</c></returns>
            <exception cref="T:System.ArgumentNullException">language</exception>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.GetValueWithFallback(System.Globalization.CultureInfo,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Get translation in given language or in any of fallback languages
            </summary>
            <param name="language">Language in which to get translation first</param>
            <param name="fallbackLanguages">
            If translation does not exist in language supplied by parameter <paramref name="language" /> then this list
            of fallback languages is used to find translation
            </param>
            <returns>Translation in requested language or uin any fallback languages; <c>null</c> otherwise if translation is not found</returns>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.LocalizationResourceTranslationCollection.GetValueWithFallback(System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Get translation in given language or in any of fallback languages
            </summary>
            <param name="language">Language in which to get translation first</param>
            <param name="fallbackLanguages">
            If translation does not exist in language supplied by parameter <paramref name="language" /> then this list
            of fallback languages is used to find translation
            </param>
            <returns>Translation in requested language or uin any fallback languages; <c>null</c> otherwise if translation is not found</returns>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.LocalizedModelAttribute">
            <summary>
            One of the main attributes of the library. Indicates that decorated class is kinda localized model.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizedModelAttribute.KeyPrefix">
            <summary>
            Used in cases when you need to override resource key generation and provide your own key.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizedModelAttribute.Inherited">
            <summary>
            Flag to indicate whether you care about your parents. If set to <c>false</c> - properties from parent type will not
            be considered as part of this type.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizedModelAttribute.OnlyIncluded">
            <summary>
            Tells synchronized to take only properties (or fields) decorated *only* with <see cref="T:DbLocalizationProvider.Abstractions.IncludeAttribute" />.
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.LocalizedResourceAttribute">
            <summary>
            One of the main attributes of the library. Tells that decorated class might contain localized resources.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizedResourceAttribute.KeyPrefix">
            <summary>
            You can use this property to override default resource key generation and provide your own prefix for underlying
            properties.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizedResourceAttribute.Inherited">
            <summary>
            Flag to indicate whether you care about your parents. If set to <c>false</c> - properties from parent type will not
            be considered as part of this type.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.LocalizedResourceAttribute.OnlyIncluded">
            <summary>
            Tells synchronized to take only properties (or fields) decorated *only* with <see cref="T:DbLocalizationProvider.Abstractions.IncludeAttribute" />.
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.Refactoring.RenamedResourceAttribute">
            <summary>
            Use this attribute if you like to rename and refactor code a lot to support existing resource renames automagically.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.Refactoring.RenamedResourceAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DbLocalizationProvider.Abstractions.Refactoring.RenamedResourceAttribute" /> class.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.Refactoring.RenamedResourceAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DbLocalizationProvider.Abstractions.Refactoring.RenamedResourceAttribute" /> class.
            </summary>
            <param name="oldName">The old name.</param>
            <param name="oldNamespace">The old namespace.</param>
            <exception cref="T:System.ArgumentException">Value cannot be null or whitespace. - oldName</exception>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.Refactoring.RenamedResourceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DbLocalizationProvider.Abstractions.Refactoring.RenamedResourceAttribute" /> class.
            </summary>
            <param name="oldName">The old name.</param>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.Refactoring.RenamedResourceAttribute.OldName">
            <summary>
            Gets or sets the old name of the resource.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.Refactoring.RenamedResourceAttribute.OldNamespace">
            <summary>
            Gets or sets old namespace for the resource.
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.ResourceKeyAttribute">
            <summary>
            Use this attribute if you want to register multiple resources for the same field or property with different
            resource keys
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.ResourceKeyAttribute.#ctor(System.String)">
            <summary>
            Creates new instance of the attribute
            </summary>
            <param name="key">Name of the resource key</param>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.ResourceKeyAttribute.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of the attribute.
            </summary>
            <param name="key">This is the key of the resource</param>
            <param name="value">This is the default translation for the resource</param>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.ResourceKeyAttribute.Key">
            <summary>
            Key for the resource
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.ResourceKeyAttribute.Value">
            <summary>
            Default translation for the resource
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.TranslationForCultureAttribute">
            <summary>
            If you wanna provide additional translations for the same resource for multiple languages, you gonna need this
            attribute.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.TranslationForCultureAttribute.#ctor(System.String,System.String)">
            <summary>
            Obviously creates new instance of the attribute
            </summary>
            <param name="translation">Translation of the resource for given language.</param>
            <param name="culture">
            Language for the additional translation (will be used as argument for <see cref="T:System.Globalization.CultureInfo" />
            ).
            </param>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.TranslationForCultureAttribute.Translation">
            <summary>
            Translation of the resource for given language.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.TranslationForCultureAttribute.Culture">
            <summary>
            Language for the additional translation (will be used as argument for <see cref="T:System.Globalization.CultureInfo" />).
            </summary>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.TranslationForEnglishAttribute">
            <summary>
            If you wanna provide additional translations Norwegian (`en`) - use this attribute.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.TranslationForEnglishAttribute.#ctor(System.String)">
            <summary>
            Initiates new instance of attribute with `en` culture.
            </summary>
            <param name="translation"></param>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.TranslationForFinnishAttribute">
            <summary>
            If you wanna provide additional translations Norwegian (`fi`) - use this attribute.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.TranslationForFinnishAttribute.#ctor(System.String)">
            <summary>
            Initiates new instance of attribute with `fi` culture.
            </summary>
            <param name="translation"></param>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.TranslationForNorwegianAttribute">
            <summary>
            If you wanna provide additional translations Norwegian (`no`) - use this attribute.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.TranslationForNorwegianAttribute.#ctor(System.String)">
            <summary>
            Initiates new instance of attribute with `no` culture.
            </summary>
            <param name="translation"></param>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.TranslationForSwedishAttribute">
            <summary>
            If you wanna provide additional translations Norwegian (`sv`) - use this attribute.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.TranslationForSwedishAttribute.#ctor(System.String)">
            <summary>
            Initiates new instance of attribute with `sv` culture.
            </summary>
            <param name="translation"></param>
        </member>
        <member name="T:DbLocalizationProvider.Abstractions.UseResourceAttribute">
            <summary>
            Sometimes you just feel lazy enough to reuse already existing resources and not generating new ones. Well, this attribute does exactly
            that.
            </summary>
        </member>
        <member name="M:DbLocalizationProvider.Abstractions.UseResourceAttribute.#ctor(System.Type,System.String)">
            <summary>
            Creates new instance of this attribute. What else?
            </summary>
            <param name="targetContainer">References type that contains resource that will be used here.</param>
            <param name="propertyName">Name of the property to use for the reference</param>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.UseResourceAttribute.TargetContainer">
            <summary>
            References type that contains resource that will be used here.
            </summary>
        </member>
        <member name="P:DbLocalizationProvider.Abstractions.UseResourceAttribute.PropertyName">
            <summary>
            Name of the property to use for the reference
            </summary>
        </member>
    </members>
</doc>
